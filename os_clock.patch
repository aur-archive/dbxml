--- dbxml-2.3.10/dbxml/src/common/Timer.orig.cpp	2006-10-30 18:45:50.000000000 +0100
+++ dbxml-2.3.10/dbxml/src/common/Timer.cpp	2007-11-16 09:15:50.704474206 +0100
@@ -11,9 +11,20 @@
 #include <iostream>
 #include <sstream>
 
-// use __os_clock from Berkeley DB internals
-
-extern "C" int __os_clock(DB_ENV *, u_int32_t *, u_int32_t *);
+// ad-hoc fix from http://forums.oracle.com/forums/thread.jspa?threadID=543913&tstart=0
+typedef struct {
+    time_t tv_sec;
+    long  tv_nsec;
+} db_timespec;
+extern "C" int __os_gettime(DB_ENV*, db_timespec*);
+
+void __os_clock(DB_ENV *dbenv, u_int32_t *secsp, u_int32_t *usecsp)
+{
+  db_timespec ts;
+  __os_gettime(NULL, &ts);
+  *secsp = (u_int32_t)ts.tv_sec;
+  *usecsp = ts.tv_nsec/1000;
+}
 
 using namespace DbXml;
 
--- dbxml-2.3.10/dbxml/src/dbxml/HighResTimer.orig.cpp	2006-10-30 18:45:52.000000000 +0100
+++ dbxml-2.3.10/dbxml/src/dbxml/HighResTimer.cpp	2007-11-16 09:15:53.231136095 +0100
@@ -14,7 +14,23 @@
 #include <iostream>
 #include <sstream>
 
-extern "C" int __os_clock(DB_ENV *, u_int32_t *, u_int32_t *);
+// extern "C" int __os_clock(DB_ENV *, u_int32_t *, u_int32_t *);
+// ad-hoc fix from http://forums.oracle.com/forums/thread.jspa?threadID=543913&tstart=0
+typedef struct {
+    time_t tv_sec;
+    long  tv_nsec;
+} db_timespec;
+extern "C" int __os_gettime(DB_ENV*, db_timespec*);
+
+void __os_clock(DB_ENV *dbenv, u_int32_t *secsp, u_int32_t *usecsp)
+{
+  db_timespec ts;
+  __os_gettime(NULL, &ts);
+  *secsp = (u_int32_t)ts.tv_sec;
+  *usecsp = ts.tv_nsec/1000;
+}
+
+
 
 using namespace DbXml;
 
--- dbxml-2.3.10/dbxml/src/dbxml/QueryContext.orig.cpp	2007-01-12 19:05:49.000000000 +0100
+++ dbxml-2.3.10/dbxml/src/dbxml/QueryContext.cpp	2007-11-16 09:14:17.449498997 +0100
@@ -48,8 +48,8 @@
 using namespace DbXml;
 using namespace std;
 
-// From DB, used by QueryInterrupt code
-extern "C" int __os_clock(DB_ENV *, u_int32_t *, u_int32_t *);
+// implemented in HighResTimer.cpp
+extern int __os_clock(DB_ENV *, u_int32_t *, u_int32_t *);
 
 namespace DbXml {
 /**
